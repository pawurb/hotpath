name: Rust CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: test ${{ matrix.rust }}
    runs-on: ubuntu-latest
    timeout-minutes: 3
    strategy:
      fail-fast: false
      matrix:
        rust:
          - 1.89
          - stable
          - nightly
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}
          components: rustfmt, clippy
      - uses: Swatinem/rust-cache@v2
        with:
          key: ${{ matrix.rust }}
      - uses: taiki-e/install-action@cargo-audit
        if: matrix.rust == 'stable'
      - name: Check no features
        run: | 
          cargo check 
      - name: Check all features
        run: | 
          cargo check --all-features
      - name: Check hotpath feature (time mode)
        run: | 
          cargo check --features hotpath
      - name: Check hotpath-ci feature 
        run: | 
          cargo check --features "hotpath,hotpath-ci"
      - name: Check hotpath-alloc-bytes-total
        run: |
          cargo check --features "hotpath,hotpath-alloc-bytes-total"
      - name: Check hotpath-alloc-count-total
        run: |
          cargo check --features "hotpath,hotpath-alloc-count-total"
      - name: Fmt
        if: matrix.rust == 'stable'
        run: |
          cargo fmt --all --check
      - name: Lint (default features)
        if: matrix.rust == 'stable'
        run: |
          cargo clippy --all --features hotpath -- -D warnings
      - name: Lint (hotpath-alloc-bytes-total)
        if: matrix.rust == 'stable'
        run: |
          cargo clippy --all --features "hotpath,hotpath-alloc-bytes-total" -- -D warnings
      - name: Lint (hotpath-alloc-count-total)
        if: matrix.rust == 'stable'
        run: |
          cargo clippy --all --features "hotpath,hotpath-alloc-count-total" -- -D warnings
      - name: Audit
        if: matrix.rust == 'stable'
        run: |
          cargo audit --ignore RUSTSEC-2023-0071
      - name: Run lib tests
        run: | 
          cargo test --lib --features hotpath
      - name: Run CLI tests
        run: | 
          cargo test -p hotpath --bin hotpath
      - name: Run integration tests
        run: | 
          cargo test --test cli_tests -- --nocapture
